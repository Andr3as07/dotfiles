# Created by Andr3as07 <andr3as06@gmail.com>

# =================================================================
# Alias
# =================================================================

# dmenu
if [ -f ~/.cache/wal/colors.sh ]; then
    . "${HOME}/.cache/wal/colors.sh"
    alias dmenu='dmenu -nb "$color0" -nf "$color15" -sb "$color1" -sf "$color15"'
    alias dmenushow='dmenushow -nb "$color0" -nf "$color15" -sb "$color1" -sf "$color15"'
fi

# ls
alias ls="ls -T 0 --color=auto"
alias ll="ls -AhlF"
alias lv="ls -lhF"
alias lh="ls -lAhFd .[^.]*"

# history
alias h="history"
alias hg="history | grep "

# Networking
alias ports="netstat -tulanp"
alias myip="curl ifconfig.io"
alias myip4="curl ifconfig.io -4"

# ps
alias psg="ps aux | grep -v grep | grep -i -e VSZ -e"

# File Searching
alias f="find . -type f -iname"

# python
alias py="python3"

# grep
alias grep="grep --color=auto"
alias fgrep="fgrep --color=auto"
alias egrep="egrep --color=auto"

# ssh
function revert_colors_after_ssh() {
  ssh "$@" 
  exit_status=$?
  if [ -f $XDG_CONFIG_HOME/sh/colorscheme ]; then
    (cat $XDG_CONFIG_HOME/sh/colorscheme &)
  fi
  return $exit_status
}
alias ssh="revert_colors_after_ssh"

# make
alias m="make"
alias mr="make run"
alias mc="make clean"
alias mb="make build"
alias md="make debug"
alias mp="make production"
alias mi="make install"

# tmux
alias t="tmux"
alias ta="tmux attach -t "
alias tl="tmux ls"

tdir() {
  local session_name
  session_name=$(basename "$PWD" | tr '[:upper:]' '[:lower:]')
  if tmux has-session -t "$session_name" 2>/dev/null; then
    tmux attach-session -t "$session_name"
  else
    tmux new-session -s "$session_name"
  fi
}

# title
title() { printf "\033]0;$*\007"; }

# cd
alias cd..="cd .."
alias -- ..="cd .."

# mkdir
alias mkdir="mkdir -pv"

# mv
alias mv="mv -iv"

# chmod & chown
alias chmod="chmod -c"
alias -- +r="chmod -c +r"
alias -- -r="chmod -c -r"
alias -- +x="chmod -c +x"
alias -- -x="chmod -c -x"

alias chown="chown -c"

# pstree
alias pstree="pstree -A"

# jobs
alias j="jobs -l"

# find
function f { find $1 -name '*'$2'*' | sort; }
function fh { find . -name '*'$1'*' | sort; }

# wget
alias wget="wget -c"

# Auto Tex
function autotex() {
  while inotifywait -e close_write $1; do pdflatex $1; done
}

if [ -d ~/.dotfiles ]; then
    # Dotfile management
    # credit: DistroTube [https://youtube.com/watch?v=tBoLDpTWVOM]
    alias config="git --git-dir=$HOME/.dotfiles --work-tree=$HOME"
fi

# Window swallowing
if command -v devour > /dev/null; then
   #alias mpv="devour mpv"
   alias vlc="devour vlc"
   alias emacs="devour emacs"
   alias sxiv="devour sxiv"
   alias feh="devour feh"
   alias zathura="devour zathura"
fi

# Ledger
alias ledger="ledger -f $HOME/.local/share/ledger/finance.dat"

# Git
if command -v git > /dev/null; then
    alias g='git'
    alias get='git'
    alias gut='git'

    alias ga='git add'
    alias gap='git add --patch'

    alias gb='git branch'
    alias gba='git branch --all'
    alias gbr='git branch --move'

    alias gc='git commit -v'
    alias gcall='git commit -v -all'
    alias gcamd='git commit -v --amend -C HEAD'

    alias gcl='git clone'

    alias gclean='git clean -fd'

    alias ghm='cd "$(git rev-parse --show-toplevel)"' # Git home

    alias gd='git diff'
    alias gds='git diff --staged'

    alias gg='git log --graph --abbrev-commit --date=relative'
    alias ggf='git log --graph --date=short --pretty=format:'\''%C(auto)%h %Cgreen%an%Creset %Cblue%cd%Creset %C(auto)%d %s'\'''
    alias ggs='gg --stat'
    alias gll='git log --graph --pretty=oneline --abbrev-commit'
    alias gnew='git log HEAD@{1}..HEAD@{0}' # Show commits since last pull, see http://blogs.atlassian.com/2014/10/advanced-git-aliases/
    alias gwc='git whatchanged'

    alias gl='git pull'

    alias gr='git remote'

    alias gsu='git submodule update --init --recursive'

    alias gsw='git switch'

    alias gst='git status'
    alias gch='git checkout'
    alias gtree='git log --graph --oneline --all'

    alias git-list-untracked='git fetch --prune && git branch -r | awk "{print \$1}" | grep -E -v -f /dev/fd/0 <(git branch -vv | grep origin) | awk "{print \$1}"'
    alias git-remove-untracked='git fetch --prune && git branch -r | awk "{print \$1}" | grep -E -v -f /dev/fd/0 <(git branch -vv | grep origin) | awk "{print \$1}" | xargs git branch -d'
fi

# Docker
if command -v docker > /dev/null; then
    alias d='docker'
    alias dps="docker ps"
    alias dex="docker exec -it"

    if docker compose version >/dev/null 2>&1; then
      alias dc='docker compose'
    else
      alias dc='docker-compose'
    fi

    alias dcd="dc down"
    alias dcu="dc up"
fi

# SystemD
alias sc='systemctl'
alias sysctl='systemctl'

# Shell
alias :q='exit'
alias :wq='exit'
alias please="sudo"
alias clear="clear && printf '\e[3J'"
alias refresh="source ~/.bashrc"
alias path='echo $PATH | tr ":" "\n"'

# bookmark system
function b() {
    fpath="${XDG_CONFIG_HOME:-$HOME/.config}/sh/bookmarks.txt";

    RED='\e[31m'
    NC='\e[0m' # No Color

    # Rad file and handle env variables
    file=$(eval "echo \"$(cat "$fpath")\"");
    line=$(echo "$file" | grep "^$1:");

    if [ ! "$line" ]; then
        echo -e "${RED}No bookmark with the name $1 found!${NC}";
        return 1;
    fi

    if (( $(grep -c . <<<"$line") > 1 )); then
        # line has more than one line
        echo -e "${RED}Multiple bookmarks with the $1 name found!${NC}";
        return 1;
    fi

    dir=$(echo "$line" | tr -d '\n' | awk -F: '{ print $2 }');

    # Actualy cd
    cd "$dir";
}

# wikipedia
function wiki() {
  curl -s "https://en.wikipedia.org/api/rest_v1/page/summary/$1" | jq -r .extract
}

# ai-cli
if command -v ai > /dev/null; then
    function shai() {
      local AI_CONTEXT="CWD: $(pwd)
DISTRO: $(cat /etc/*-release | grep ID | head -n1 | cut -d '=' -f2)"
      local AI_RESPONSE=$(echo "
### CONTEXT

$AI_CONTEXT

### PROMPT

$@" | ai write_shell_command 2>/dev/null)

      echo -e "\e[31m- AI RESPONSE: ALWAYS VERIFY BEFORE RUNNING ----------------------------\e[0m"
      echo "$AI_RESPONSE"
      echo -e "\e[31m- PRESS Ctrl+A TO RUN --------------------------------------------------\e[0m"
      local AI_RESPONSE=$(printf "%q" "$AI_RESPONSE")
      bind "\"\C-a\": \"$AI_RESPONSE\""
    }

    alias 'ยง'='shai'
fi
